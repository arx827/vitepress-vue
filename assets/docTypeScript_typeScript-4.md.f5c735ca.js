import{_ as s,o as a,c as n,O as p}from"./chunks/framework.1e3fe59b.js";const A=JSON.parse('{"title":"TypeSctipt 邁向專家之路","description":"","frontmatter":{"title":"TypeSctipt 邁向專家之路"},"headers":[],"relativePath":"docTypeScript/typeScript-4.md","filePath":"docTypeScript/typeScript-4.md"}'),l={name:"docTypeScript/typeScript-4.md"},o=p(`<h1 id="第一篇-typescript-入門準備" tabindex="-1">第一篇 TypeScript 入門準備 <a class="header-anchor" href="#第一篇-typescript-入門準備" aria-label="Permalink to &quot;第一篇 TypeScript 入門準備&quot;">​</a></h1><hr><h1 id="_04-javascript-快速入門-下" tabindex="-1">04 JavaScript 快速入門(下) <a class="header-anchor" href="#_04-javascript-快速入門-下" aria-label="Permalink to &quot;04 JavaScript 快速入門(下)&quot;">​</a></h1><p>本章將繼續解說有助於理解 <code>TypeScript</code> 開發的 <code>JavaScript</code> 型別系統，但重心會放在 <code>JavaScript</code> 對物件的支援，包括定義物件的不同方式、以及它們與 <code>JavaScript</code> 類別 (<code>class</code>) 的關係。也會示範如何處理值的序列、<code>JavaScript</code> 的集合，最後則來看 模組 (<code>module</code>) 機制，可把一個專案拆分成多個 <code>JavaScript</code> 檔案。</p><h2 id="_4-1-本章行前準備" tabindex="-1">4-1 本章行前準備 <a class="header-anchor" href="#_4-1-本章行前準備" aria-label="Permalink to &quot;4-1 本章行前準備&quot;">​</a></h2><p>為了建立 <code>primer2</code> 專案，請在電腦中選擇一個位置新增 <code>primer</code> 目錄，然後於命令提示字元或終端機，從該目錄的位置初始化它：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">\\primer2&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--yes</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>接著新增一個 <code>index.js</code> 檔案，並輸入以下的程式碼：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// \\primer2\\index.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> hat </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hat</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">price</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">getPriceIncTax</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">price</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Hat: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">hat</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">price</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">, </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">hat</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPriceIncTax</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="_4-2-了解-javascript-的物件繼承" tabindex="-1">4-2 了解 JavaScript 的物件繼承 <a class="header-anchor" href="#_4-2-了解-javascript-的物件繼承" aria-label="Permalink to &quot;4-2 了解 JavaScript 的物件繼承&quot;">​</a></h2><h3 id="_4-2-1-原型-prototype-物件" tabindex="-1">4-2-1 原型 (prototype) 物件 <a class="header-anchor" href="#_4-2-1-原型-prototype-物件" aria-label="Permalink to &quot;4-2-1 原型 (prototype) 物件&quot;">​</a></h3><p>和其他物件導向語言不同，<code>JavaScript</code> 並沒有類別；它的所有物件，其實都連結到一個 <code>原型物件</code>，並且會從該物件繼承屬性與方法。</p><p>原型物件本身也是物件，它們也有自己的原型物件，使得物件之間會形成一條 <code>原型鏈 (prototype chain)</code>。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> hat </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hat</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">price</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">getPriceIncTax</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">price</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Hat: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">hat</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">price</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">, </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">hat</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPriceIncTax</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">toString: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">hat</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>第二行指令呼叫了一個 <code>toString()</code> 方法，可是並沒有先幫 <code>hat</code> 物件定義 <code>toString</code> 屬性。這使得 <code>JavaScript</code> 執行環境轉而查看 <code>hat</code> 物件上游的原型，也就是 <code>Object</code> 物件。</p><h3 id="_4-2-2-檢視與修改原型物件" tabindex="-1">4-2-2 檢視與修改原型物件 <a class="header-anchor" href="#_4-2-2-檢視與修改原型物件" aria-label="Permalink to &quot;4-2-2 檢視與修改原型物件&quot;">​</a></h3><p><code>JavaScript</code> 內建的 <code>Object</code> 不僅是絕大多數物件的原型，它本身也提供了一些不必繼承便可直接使用的方法，可藉此來取得與原型物件相關的資訊。</p><table><thead><tr><th>方法</th><th>說明</th></tr></thead><tbody><tr><td><code>getPrototypeOf()</code></td><td>傳回物件的原型物件</td></tr><tr><td><code>setPrototypeOf(物件)</code></td><td>設定物件的原型物件</td></tr><tr><td><code>getOwnPropertyNames()</code></td><td>傳回物件自有屬性的名稱</td></tr></tbody></table><blockquote><p>物件的 <code>Prototype</code> 屬性也可讓我們存取或修改原型物件，但這麼做對 <code>JavaScript</code> 執行環境來說，是沉重的負擔。如果可以的話，建議還是使用上表列出的方法。</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> hat </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hat</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">price</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">getPriceIncTax</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">price</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> boots </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Boots</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">price</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">getPriceIncTax</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">price</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> hatPrototype </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPrototypeOf</span><span style="color:#A6ACCD;">(hat)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Hat Prototype: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">hatPrototype</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> bootsPrototype </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPrototypeOf</span><span style="color:#A6ACCD;">(boots)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Boots Prototype: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">bootsPrototype</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Common prototype: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">hatPrototype </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> bootsPrototype</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>結果顯示 <code>hat</code> 與 <code>boots</code> 物件共想著同一個原型物件(<code>Object 物件</code>)。</p><h2 id="_4-3-在-javascript-使用類別-class" tabindex="-1">4-3 在 JavaScript 使用類別 (class) <a class="header-anchor" href="#_4-3-在-javascript-使用類別-class" aria-label="Permalink to &quot;4-3 在 JavaScript 使用類別 (class)&quot;">​</a></h2><h2 id="_4-4-走訪器與產生器的使用" tabindex="-1">4-4 走訪器與產生器的使用 <a class="header-anchor" href="#_4-4-走訪器與產生器的使用" aria-label="Permalink to &quot;4-4 走訪器與產生器的使用&quot;">​</a></h2><h2 id="_4-5-javascript-集合的操作" tabindex="-1">4-5 JavaScript 集合的操作 <a class="header-anchor" href="#_4-5-javascript-集合的操作" aria-label="Permalink to &quot;4-5 JavaScript 集合的操作&quot;">​</a></h2><h2 id="_4-6-撰寫與匯入-javascript-模組" tabindex="-1">4-6 撰寫與匯入 JavaScript 模組 <a class="header-anchor" href="#_4-6-撰寫與匯入-javascript-模組" aria-label="Permalink to &quot;4-6 撰寫與匯入 JavaScript 模組&quot;">​</a></h2><h2 id="_4-7-本章總結" tabindex="-1">4-7 本章總結 <a class="header-anchor" href="#_4-7-本章總結" aria-label="Permalink to &quot;4-7 本章總結&quot;">​</a></h2>`,26),e=[o];function t(c,r,y,D,F,i){return a(),n("div",null,e)}const d=s(l,[["render",t]]);export{A as __pageData,d as default};
